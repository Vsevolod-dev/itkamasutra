{"version":3,"sources":["components/hoc/WithAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPost.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPost.jsx","components/Profile/MyPosts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileInfo","profile","className","classes","description","src","photos","large","alt","fullName","Preloader","Post","item","message","like","maxLength10","maxLengthCreator","MyPost","console","log","messages","profilePage","posts","map","m","key","id","pad","AddMyPostFormRedux","onSubmit","values","addPost","newPostBody","PureComponent","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostContainer","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","history","push","getProfile","getStatus","isFetching","compose","withRouter"],"mappings":"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","file":"static/js/3.d8f2f6fa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfileInfo_profile__11fzH\",\"description\":\"ProfileInfo_description__1RO5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pad\":\"MyPost_pad__1ohjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3h4rT\"};","import React, {useEffect, useState} from \"react\";\r\n//import Preloader from \"../../../assets/Preloader\";\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? <div>\r\n                    <input onChange={onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={deactivateEditMode}\r\n                           value={status}\r\n                    />\r\n                </div>\r\n                : <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status ? props.status : \"-----\"}</span>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../../assets/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={classes.profile}>\r\n                {/*<img*/}\r\n                {/*    src=\"https://avatars.mds.yandex.net/get-pdb/2186514/72a5f745-2884-48c6-805c-c4bbe73ff728/s1200?webp=false\"*/}\r\n                {/*    alt=\"\"/>*/}\r\n            </div>\r\n            <div className={classes.description}>\r\n                <img src={props.profile.photos.large != null ? props.profile.photos.large:'https://img2.freepng.ru/20180523/tha/kisspng-businessperson-computer-icons-avatar-clip-art-lattice-5b0508dc6a3a10.0013931115270566044351.jpg'} alt=\"\"/>\r\n                <div>{props.profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img\r\n                src={'https://avatars.mds.yandex.net/get-pdb/1907868/518c05e0-80a3-4b75-a263-3f5746c8cf4d/s1200?webp=false'}\r\n                alt={'cartoon'}\r\n            />\r\n            {props.message}\r\n            <div>\r\n                <span>\r\n                    {props.like} like\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport classes from './MyPost.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validator/validators\";\r\nimport {Textarea} from \"../../../assets/OwnElements/OwnElements\";\r\n\r\nconst maxLength10 = maxLengthCreator(300)\r\n\r\nclass MyPost extends React.PureComponent {\r\n\r\n    render() {\r\n        console.log('render')\r\n        let state = this.props.profilePage\r\n        const messages = state.posts.map(m => <Post message={m.message} key={m.id} like={m.like}/>)\r\n\r\n        const addPost = (values) => this.props.addPost(values.newPostBody)\r\n\r\n        return <div className={classes.pad}>\r\n            <h3>MyPost</h3>\r\n            <AddMyPostFormRedux onSubmit={addPost}/>\r\n            <div>\r\n                {messages}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst AddMyPostForm = props => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name={'newPostBody'}\r\n                       placeholder={'Enter your post'}\r\n                       validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMyPostFormRedux = reduxForm({form: \"profileAddMyPostForm\"})(AddMyPostForm)\r\n\r\nexport default MyPost;\r\n","import {addPostActionCreator} from \"../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostActionCreator(newPostBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost)\r\n\r\nexport default MyPostContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostContainer from \"./MyPosts/MyPostContainer\";\r\n\r\nconst Profile = props => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../redux/profile-reducer\";\r\nimport Preloader from \"../../assets/Preloader\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n            if (!userId) this.props.history.push('/login')\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Preloader isFetching={this.props.isFetching}/>\r\n            <Profile profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.userId,\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {getProfile, updateStatus, getStatus}), withRouter, withAuthRedirect)(ProfileContainer)\r\n"],"sourceRoot":""}